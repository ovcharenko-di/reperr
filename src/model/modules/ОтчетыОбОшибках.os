#Использовать json

Функция ПолучитьСписок() Экспорт

	ХранилищеДанных = МенеджерНастроек.ХранилищеДанных();

	Возврат ХранилищеДанных.ПолучитьОшибки();

КонецФункции

Процедура ОбработатьОтчетОбОшибке(ФайлОтчета) Экспорт

	ХранилищеДанных = МенеджерНастроек.ХранилищеДанных();
	ДанныеОтчетаОбОшибке = ХранилищеДанных.ОбработатьОтчетОбОшибке(ФайлОтчета);
	
	ИдЗадачиВТрекере = ЗарегистрироватьОшибку(ДанныеОтчетаОбОшибке);

	Если ИдЗадачиВТрекере <> Неопределено Тогда
		ХранилищеДанных.УстановитьИдЗадачиВТрекере(ДанныеОтчетаОбОшибке.Идентификатор, ИдЗадачиВТрекере);
	КонецЕсли;

КонецПроцедуры

Функция ЗарегистрироватьОшибку(ДанныеОтчетаОбОшибке)

	ИдТрекера = Неопределено;

	ПровайдерИнтеграции = МенеджерНастроек.ПровайдерИнтеграции();

	Если ПровайдерИнтеграции <> Неопределено Тогда
		ИдТрекера = ПровайдерИнтеграции.ЗарегистрироватьОшибку(ДанныеОтчетаОбОшибке);
	Иначе
		ВызватьИсключение("Регистрация ошибок в баг-трекере не настроена");
	КонецЕсли;

	Возврат ИдТрекера;

КонецФункции

Функция СформироватьЗаголовокОписанияОшибки() Экспорт
	
	ЧастиЗаголовка = Новый Массив();

	ЧастиЗаголовка.Добавить("Ошибка зарегистрирована автоматически с помощью механизмов платформы 1С 8.3.17+");
	ЧастиЗаголовка.Добавить("======================");

	Результат = СтрСоединить(ЧастиЗаголовка, Символы.ПС);

	Возврат Результат;
	
КонецФункции

Функция СформироватьТелоОписанияОшибки(ДанныеОтчетаОбОшибке) Экспорт

	ЧастиРезультата = Новый Массив();

	ПоляОписанияОшибки = СформироватьТелоОписанияОшибкиJSON(ДанныеОтчетаОбОшибке);
	
	Для Каждого ПолеОшибки Из ПоляОписанияОшибки Цикл

		ПолеОшибкиПоШаблону = СтрШаблон("%1: %2", ПолеОшибки.Ключ, ПоляОписанияОшибки[ПолеОшибки.Ключ]);
		
		ЧастиРезультата.Добавить(ПолеОшибкиПоШаблону);
		
	КонецЦикла;

	Результат = СтрСоединить(ЧастиРезультата, Символы.ПС);
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьТелоОписанияОшибкиJSON(ДанныеОтчетаОбОшибке) Экспорт

	Отчет = ДанныеОтчетаОбОшибке.Отчет;
	ИнфоОКонфигурации = Отчет["configInfo"];
	ИнфоОКлиенте = Отчет["clientInfo"];
	ИнфоОСервере = Отчет["serverInfo"];
	ИнфоОбОшибке = Отчет["errorInfo"];
	ИнфоОбОшибкеПриложения = ИнфоОбОшибке["applicationErrorInfo"];
	
	ПоляОписанияОшибки = Новый Структура;
	
	ПоляОписанияОшибки.Вставить("Дата", Отчет["time"]);
	ПоляОписанияОшибки.Вставить("ИнформационнаяБаза", "Не предоставляется платформой");
	ПоляОписанияОшибки.Вставить("ИмяКонфигурации", ИнфоОКонфигурации["name"]);
	ПоляОписанияОшибки.Вставить("ВерсияКонфигурации", ИнфоОКонфигурации["version"]);
	ПоляОписанияОшибки.Вставить("ПлатформаКлиент", ИнфоОКлиенте["platformType"]);
	ПоляОписанияОшибки.Вставить("ВерсияПлатформы1С", ИнфоОКлиенте["appVersion"]);
	ПоляОписанияОшибки.Вставить("СУБД", ИнфоОСервере["dbms"]);
	Если ИнфоОбОшибкеПриложения <> Неопределено Тогда

		УзелСтек = ИнфоОбОшибкеПриложения["stack"];
		Если УзелСтек <> Неопределено Тогда
			Стек = УзелСтек[0];
			ПредставлениеСтека = СформироватьПредставлениеСтека(Стек);
			ПоляОписанияОшибки.Вставить("Стек", ПредставлениеСтека);
		КонецЕсли;

		УзелОшибки = ИнфоОбОшибкеПриложения["errors"];
		Если УзелОшибки <> Неопределено Тогда
			ПредставлениеОшибок = СформироватьПредставлениеОшибок(УзелОшибки);
			ПоляОписанияОшибки.Вставить("Ошибки", ПредставлениеОшибок);
		КонецЕсли;

	КонецЕсли;

	Возврат ПоляОписанияОшибки;

КонецФункции

Функция СформироватьОписаниеОшибки(ДанныеОтчетаОбОшибке) Экспорт
	
	ЗаголовокОписанияОшибки = СформироватьЗаголовокОписанияОшибки();
	ТелоОписанияОшибки = СформироватьТелоОписанияОшибки(ДанныеОтчетаОбОшибке);
	
	Результат = СтрШаблон("%1%2%3", ЗаголовокОписанияОшибки, Символы.ПС, ТелоОписанияОшибки);
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьПредставлениеСтека(Стек)
	
	ЧастиСтека = Новый Массив();
	
	Для Каждого ЭлементСтека Из Стек Цикл
		
		ЧастиСтека.Добавить(ЭлементСтека);
		
	КонецЦикла;

	Результат = СтрСоединить(ЧастиСтека, Символы.ПС);
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьПредставлениеОшибок(Ошибки)
	
	ЧастиОшибки = Новый Массив();
	
	Для Каждого Ошибка Из Ошибки Цикл
		
		Для Каждого ЭлементОшибки Из Ошибка Цикл
			
			Если ТипЗнч(ЭлементОшибки) = Тип("Массив") Тогда
				Для Каждого ЭлементЭлементаОшибки Из ЭлементОшибки Цикл
					ЧастиОшибки.Добавить(ЭлементЭлементаОшибки);
				КонецЦикла;
			Иначе
				ЧастиОшибки.Добавить(ЭлементОшибки);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;

	Результат = СтрСоединить(ЧастиОшибки, Символы.ПС);
	
	Возврат Результат;
	
КонецФункции